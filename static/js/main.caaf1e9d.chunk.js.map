{"version":3,"sources":["components/Statistics/Statistics.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Section/Section.module.css","components/Notification/Notification.module.css","components/Container/Container.module.css","components/Statistics/Statistics.js","components/FeedbackOptions/FeedbackOptions.js","components/Section/Section.js","components/Notification/Notification.js","components/Container/Container.js","App.js","index.js"],"names":["module","exports","Statistics","good","neutral","bad","total","positivePercentage","className","styles","text","defaultProps","FeedbackOptions","options","onLeaveFeedback","wrapper","map","item","button","onClick","type","Section","title","children","Notification","message","Container","App","state","addFeedback","name","setState","prevState","countTotalFeedback","Object","values","reduce","countPositiveFeedbackPercentage","Math","round","this","keyNames","keys","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+HACAA,EAAOC,QAAU,CAAC,KAAO,2B,iBCAzBD,EAAOC,QAAU,CAAC,QAAU,iCAAiC,OAAS,kC,oBCAtED,EAAOC,QAAU,CAAC,MAAQ,yB,gBCA1BD,EAAOC,QAAU,CAAC,MAAQ,8B,gBCA1BD,EAAOC,QAAU,CAAC,UAAY,+B,qKCIxBC,EAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,mBAA9B,OACjB,qCACE,oBAAGC,UAAWC,IAAOC,KAArB,mBAAkCP,KAClC,oBAAGK,UAAWC,IAAOC,KAArB,sBAAqCN,KACrC,oBAAGI,UAAWC,IAAOC,KAArB,kBAAiCL,KACjC,oBAAGG,UAAWC,IAAOC,KAArB,oBAAmCJ,KACnC,oBAAGE,UAAWC,IAAOC,KAArB,gCAA+CH,EAA/C,WAIJL,EAAWS,aAAe,CACxBJ,mBAAoB,GAWPL,Q,gBCFAU,EApBS,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,gBAAZ,OACtB,qBAAKN,UAAWC,IAAOM,QAAvB,SACGF,EAAQG,KAAI,SAAAC,GAAI,OACf,wBACET,UAAWC,IAAOS,OAClBC,QAAS,kBAAML,EAAgBG,IAE/BG,KAAK,SAJP,SAMGH,GAHIA,S,gBCKEI,EAXC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,qCACE,oBAAIf,UAAWC,IAAOa,MAAtB,SAA8BA,IAC7BC,M,iBCKUC,EARM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACnB,oBAAIjB,UAAWC,IAAOa,MAAtB,SAA8BG,K,iBCEjBC,EAJG,SAAC,GAAD,IAAGH,EAAH,EAAGA,SAAH,OAChB,qBAAKf,UAAWC,IAAOiB,UAAvB,SAAmCH,KCqDtBI,E,4MAlDbC,MAAQ,CACNzB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPwB,YAAc,SAAAC,GACZ,EAAKC,UAAS,SAAAC,GAAS,sBACpBF,EAAOE,EAAUF,GAAQ,O,EAI9BG,mBAAqB,kBACnBC,OAAOC,OAAO,EAAKP,OAAOQ,QAAO,SAAC9B,EAAOW,GAAR,OAAiBX,EAAQW,IAAM,I,EAElEoB,gCAAkC,kBAChCC,KAAKC,MAAO,EAAKX,MAAMzB,KAAO,EAAK8B,qBAAwB,M,4CAE7D,WACE,IAAQJ,EACNW,KADMX,YAAaI,EACnBO,KADmBP,mBAAoBI,EACvCG,KADuCH,gCAEzC,EAA+BG,KAAKZ,MAA5BzB,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACjBoC,EAAWP,OAAOQ,KAAKF,KAAKZ,OAElC,OACE,eAAC,EAAD,WACE,cAAC,EAAD,CAASN,MAAM,wBAAf,SACE,cAAC,EAAD,CACET,QAAS4B,EACT3B,gBAAiBe,MAGrB,cAAC,EAAD,CAASP,MAAM,aAAf,SACGW,IACC,cAAC,EAAD,CACE9B,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAO2B,IACP1B,mBAAoB8B,MAGtB,cAAC,EAAD,CAAcZ,QAAQ,+B,GA3ChBkB,aCFlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.caaf1e9d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"Statistics_text__1u5YA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"FeedbackOptions_wrapper__1XRI9\",\"button\":\"FeedbackOptions_button__2d_1d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__2-Wbv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Notification_title__3Z_CZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__2ac6h\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport styles from './Statistics.module.css';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\r\n  <>\r\n    <p className={styles.text}>Good: {good}</p>\r\n    <p className={styles.text}>Neutral: {neutral}</p>\r\n    <p className={styles.text}>Bad: {bad}</p>\r\n    <p className={styles.text}>Total: {total}</p>\r\n    <p className={styles.text}>Positive feedback: {positivePercentage}%</p>\r\n  </>\r\n);\r\n\r\nStatistics.defaultProps = {\r\n  positivePercentage: 0,\r\n};\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number,\r\n};\r\n\r\nexport default Statistics;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport styles from './FeedbackOptions.module.css';\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => (\r\n  <div className={styles.wrapper}>\r\n    {options.map(item => (\r\n      <button\r\n        className={styles.button}\r\n        onClick={() => onLeaveFeedback(item)}\r\n        key={item}\r\n        type=\"button\"\r\n      >\r\n        {item}\r\n      </button>\r\n    ))}\r\n  </div>\r\n);\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport styles from './Section.module.css';\r\n\r\nconst Section = ({ title, children }) => (\r\n  <>\r\n    <h2 className={styles.title}>{title}</h2>\r\n    {children}\r\n  </>\r\n);\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport styles from './Notification.module.css';\r\n\r\nconst Notification = ({ message }) => (\r\n  <h3 className={styles.title}>{message}</h3>\r\n);\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Notification;\r\n","import React from 'react';\n\nimport styles from './Container.module.css';\n\nconst Container = ({ children }) => (\n  <div className={styles.Container}>{children}</div>\n);\n\nexport default Container;\n","import React, { Component } from 'react';\nimport Statistics from './components/Statistics';\nimport FeedbackOptions from './components/FeedbackOptions';\nimport Section from './components/Section/Section';\nimport Notification from './components/Notification';\nimport Container from './components/Container';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  addFeedback = name => {\n    this.setState(prevState => ({\n      [name]: prevState[name] + 1,\n    }));\n  };\n\n  countTotalFeedback = () =>\n    Object.values(this.state).reduce((total, item) => total + item, 0);\n\n  countPositiveFeedbackPercentage = () =>\n    Math.round((this.state.good / this.countTotalFeedback()) * 100);\n\n  render() {\n    const { addFeedback, countTotalFeedback, countPositiveFeedbackPercentage } =\n      this;\n    const { good, neutral, bad } = this.state;\n    const keyNames = Object.keys(this.state);\n\n    return (\n      <Container>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={keyNames}\n            onLeaveFeedback={addFeedback}\n          ></FeedbackOptions>\n        </Section>\n        <Section title=\"Statistics\">\n          {countTotalFeedback() ? (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={countTotalFeedback()}\n              positivePercentage={countPositiveFeedbackPercentage()}\n            ></Statistics>\n          ) : (\n            <Notification message=\"No feedback given\"></Notification>\n          )}\n        </Section>\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}